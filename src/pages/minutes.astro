---
import List from "../components/Acta/MinutesList.vue";
import RootLayout from "../layouts/RootLayout.astro";
import OrdinaryService from "../services/OrdinaryService";
import PoliticalService from "../services/PoliticalService";

const searchParams = Astro.url.searchParams
const type = searchParams.get("type")

async function getActas(tipo: string) {
    const services = {
        ro: new OrdinaryService(),
        cp: new PoliticalService(),
        all: () => [new PoliticalService(), new OrdinaryService()] as const
    } as const;

    try {
        const service = services[tipo as keyof typeof services] as any;
        if (!service) {
            throw new Error('Invalid tipo');
        }

        if (tipo === 'all') {
            const [pol, ord] = service() as ReturnType<typeof services["all"]>;
            const [cpMinutes, ordMinutes] = await Promise.all([pol.getAll(), ord.getAll()])
            const cpWithTypes = cpMinutes?.map((minute: any) => ({...minute, type: "cp"})) ?? []
            const ordWithTypes = ordMinutes?.map((minute: any) => ({...minute, type: "ro"})) ?? []
            return [...cpWithTypes, ...ordWithTypes];
        } else {
            const minutes = await service.getAll()
            return minutes?.map((minute: any) => ({...minute, type: tipo})) ?? [];
        }
    } catch (error) {
        console.error('Error fetching actas:', error);
        throw error;
    }
}

const actas = await getActas(type ?? "all")
---

<RootLayout>
    <List actas={actas} type={type ?? "all"} client:load/>
</RootLayout>
