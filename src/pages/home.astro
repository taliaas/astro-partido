---
import DashboardHome from "@/components/Dashboard/DashboardHome.vue";
import RootLayout from "../layouts/RootLayout.astro";
import {
  default as Computo,
  default as ComputoService,
} from "../services/Computo";
import OrdinaryService from "../services/OrdinaryService";
import MinutesService from "../services/Minutes";

async function getMinute() {
  const service = new MinutesService();
  try {
    return service.getLatestMinute();
  } catch (e) {
    console.error(e);
  }
}

const data = [
  {
    id: 1,
    title: "Acuerdos",
    name: "acuerdos",
    description: "Comportamiento de acuerdos en el último mes",
    porcen: 2,
    trend: 0,
  },
  {
    id: 2,
    title: "Participantes",
    name: "participantes",
    description: "Asistencia de participantes",
    porcen: 3,
    trend: 0,
  },
  {
    id: 3,
    title: "Invitados",
    name: "invitados",
    description: "Asistencia de invitados",
    porcen: 0,
    trend: 0,
  },
  {
    id: 4,
    title: "Rendición",
    name: "rendicion",
    description: "Rendición de cuentas",
    porcen: 0,
    trend: 0,
  },
];
async function getKPIs() {
  const services = new Computo();
  try {
    const kpis = await services.getCompare();
    return data.map((item) => {
      const diference = kpis.difference[item.name];
      const current = kpis.currentInfo[item.name];
      if (diference !== undefined || current !== undefined) {
        return { ...item, trend: diference, porcen: current };
      }

      return item;
    });
  } catch (e) {
    console.error(e);
  }
}
async function getDocument() {
  const service = new MinutesService();
  try {
    return await service.getMinutes();
  } catch (e) {
    console.error(e);
  }
}
async function getNegativeIndicator(): Promise<number | undefined> {
  const service = new ComputoService();
  try {
    return await service.getNegativeIndicator();
  } catch (e) {
    console.error(e);
  }
}

const [documents, kpis, list, negative] = await Promise.all([
  getMinute(),
  getKPIs(),
  getDocument(),
  getNegativeIndicator(),
]);
console.log(documents, kpis, list, negative);

const cards = [
  {
    title: "Documentos Pendientes",
    value: list?.pending ?? 0,
    icon: "FileText",
  },
  {
    title: "Documentos Procesados",
    value: list?.proccesing ?? 0,
    icon: "FileCheck2",
  },
  {
    title: "Total de Documentos",
    value: list?.documents ?? 0,
    icon: "Files",
  },
  {
    title: "Indicadores Alertas",
    value: negative ?? 0,
    icon: "Activity",
  },
];
---

<RootLayout>
  <DashboardHome
    client:load
    documents={documents!}
    kpis={kpis!}
    cards={cards}
  />
</RootLayout>
