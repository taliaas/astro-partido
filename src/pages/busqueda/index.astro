
---
import {getSession} from "auth-astro/server";
import CoreService from "../../services/CoreService";
import RootLayout from "../../layouts/RootLayout.astro";
import Busqueda from "../../components/filters/Busqueda.vue";
import SolrService from "../../services/SolrService";

if (Astro.request.method !== "POST") {
    return Astro.redirect("/minutes");
}

const session = (await getSession(Astro.request)) as any
const formData = await Astro.request.formData();
const query = Object.fromEntries(
    Array.from(formData.entries()).filter((entry) => entry[1])
);

const searchParams = Astro.url.searchParams;
const limit = searchParams.get("limit") || 10;
const page = searchParams.get("page") || 0;

async function getActas() {
    try {
        const service = new SolrService();
        if (!service) {
            throw new Error("Error al leer");
        }
        return service.getAllMinutes(Number(limit));
    } catch (error) {
        console.error("Error fetching actas:", error);
        throw new Error();
    }
}
async function getActasByQuery() {
    try {
        const service = new SolrService();
        if (!service) {
            throw new Error("Error al leer");
        }
        return service.queryMinutes(query, Number(page), Number(limit), "OR");
    } catch (error) {
        console.error("Error fetching actas:", error);
        throw new Error();
    }
}
async function getCore() {
    const service = new CoreService();
    try {
        return await service.getAllCore(session.jwt);
    } catch (e) {
        console.error(e);
    }
}
const actas = Array.from(Object.entries(query)).length === 0
    ? await getActas()
    : await getActasByQuery();
const cores = await getCore()
---

<RootLayout>
    <Busqueda actas={actas} limit={limit} page={page} cores={cores}/>
</RootLayout>
